version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: task_manager_postgres
    environment:
      POSTGRES_DB: task_manager
      POSTGRES_USER: task_user
      POSTGRES_PASSWORD: task_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U task_user -d task_manager"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: task_manager_backend
    environment:
      APP_ENV: prod
      APP_SECRET: your-secret-key-here
      DATABASE_URL: "postgresql://task_user:task_password@postgres:5432/task_manager?serverVersion=16&charset=utf8"
      CORS_ALLOW_ORIGIN: ^https?://(localhost|127\.0\.0\.1)(:[0-9]+)?$
    volumes:
      - ./backend:/var/www/html
      - /var/www/html/vendor
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: task_manager_frontend
    environment:
      VITE_API_URL: http://localhost:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - backend

  nginx:
    image: nginx:alpine
    container_name: task_manager_nginx
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend

volumes:
  postgres_data: